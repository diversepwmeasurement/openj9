jobs:
  parseComment:
    if: startsWith(github.event.comment.body, 'run aqa') && github.event.issue.pull_request
    outputs:
      build_parameters: ${{ steps.argparse.outputs.build_parameters }}
      failed: ${{ steps.failure_report.outputs.failed }}
      workflow_id: ${{ steps.workflow_run_info.outputs.id }}
      workflow_url: ${{ steps.workflow_run_info.outputs.url }}
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      id: workflow_run_info
      name: Get workflow run info
      run: 'echo ::set-output name=url::$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID

        echo ::set-output name=id::$GITHUB_RUN_ID

        '
    - continue-on-error: true
      name: Checkout current repo
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      with:
        path: main
    - continue-on-error: true
      name: Checkout main TKG repo
      uses: actions/checkout@8ade135a41bc03ea155e62e844d188df1ea18608
      with:
        path: TKG
        ref: master
        repository: adoptium/TKG.git
    - continue-on-error: true
      env:
        args: ${{ github.event.comment.body }}
      id: argparse
      name: Parse parameters
      run: python3 TKG/scripts/testBot/runAqaArgParse.py $args 2> log.txt
    - continue-on-error: true
      id: output_log
      if: failure()
      name: Output log
      run: 'log=$(cat log.txt)

        log="${log//''%''/''%25''}"

        log="${log//$''\n''/''%0A''}"

        log="${log//$''\r''/''%0D''}"

        log="${log/$''`''/''\`''}"

        echo ::set-output name=log::$log

        '
    - continue-on-error: true
      if: failure()
      name: Create error comment
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: "comment_body = `\n@${{ github.actor }}\n\\`\\`\\`\n${{ steps.output_log.outputs.log\
          \ }}\n\\`\\`\\`\nNo builds were started.\n`;\ngithub.issues.createComment({\n\
          \  issue_number: context.issue.number,\n  owner: context.repo.owner,\n \
          \ repo: context.repo.repo,\n  body: comment_body\n})\n"
    - continue-on-error: true
      id: failure_report
      if: failure()
      name: Failure report
      run: echo ::set-output name=failed::true
    - continue-on-error: true
      name: Create success comment
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: "comment_body = `\n@${{ github.actor }} Build(s) started with the\
          \ following parameters:\n- sdk_resource: ${{ steps.argparse.outputs.sdk_resource\
          \ }}\n- customized_sdk_url: ${{ steps.argparse.outputs.customized_sdk_url\
          \ }}\n- archive_extension: ${{ steps.argparse.outputs.archive_extension\
          \ }}\n- build_list: ${{ steps.argparse.outputs.build_list }}\n- target:\
          \ ${{ steps.argparse.outputs.target }}\n- platform: ${{ steps.argparse.outputs.platform\
          \ }}\n- jdk_version: ${{ steps.argparse.outputs.jdk_version }}\n- jdk_impl:\
          \ ${{ steps.argparse.outputs.jdk_impl }}\n- openjdk_testrepo: ${{ steps.argparse.outputs.openjdk_testrepo\
          \ }}\n- tkg_repo: ${{ steps.argparse.outputs.tkg_repo }}\n\nWorkflow Run\
          \ ID: [${{ steps.workflow_run_info.outputs.id }}](${{ steps.workflow_run_info.outputs.url\
          \ }})\n`;\ngithub.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: comment_body\n\
          })\n"
    - continue-on-error: true
      name: Echo parameters
      run: 'echo ${{ steps.argparse.outputs.build_parameters }}

        '
  reportCancelled:
    if: cancelled()
    needs:
    - parseComment
    - runBuild
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Create comment
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: "comment_body = `\n@${{ github.actor }} Build(s) cancelled.\nWorkflow\
          \ Run ID: [${{ needs.parseComment.outputs.workflow_id }}](${{ needs.parseComment.outputs.workflow_url\
          \ }})\n`;\ngithub.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: comment_body\n\
          })\n"
  reportFailure:
    if: failure() && !needs.parseComment.outputs.failed
    needs:
    - parseComment
    - runBuild
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Create comment
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: "comment_body = `\n@${{ github.actor }} Build(s) failed.\nWorkflow\
          \ Run ID: [${{ needs.parseComment.outputs.workflow_id }}](${{ needs.parseComment.outputs.workflow_url\
          \ }})\n`;\ngithub.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: comment_body\n\
          })\n"
  reportSuccess:
    if: success()
    needs:
    - parseComment
    - runBuild
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      name: Create comment
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      with:
        github-token: ${{secrets.GITHUB_TOKEN}}
        script: "comment_body = `\n@${{ github.actor }} Build(s) successful.\nWorkflow\
          \ Run ID: [${{ needs.parseComment.outputs.workflow_id }}](${{ needs.parseComment.outputs.workflow_url\
          \ }})\n`;\ngithub.issues.createComment({\n  issue_number: context.issue.number,\n\
          \  owner: context.repo.owner,\n  repo: context.repo.repo,\n  body: comment_body\n\
          })\n"
  runBuild:
    needs: parseComment
    runs-on: self-hosted
    steps:
    - continue-on-error: true
      if: matrix.sdk_resource != 'customized'
      uses: AdoptOpenJDK/install-jdk@2f15d3f82051aa50984186fc1184467d0d9f87d0
      with:
        impl: ${{ matrix.jdk_impl }}
        source: ${{ matrix.sdk_resource }}
        sourceType: buildType
        version: ${{ matrix.jdk_version }}
    - continue-on-error: true
      if: matrix.sdk_resource == 'customized'
      uses: AdoptOpenJDK/install-jdk@2f15d3f82051aa50984186fc1184467d0d9f87d0
      with:
        archiveExtension: ${{ matrix.archive_extension }}
        impl: ${{ matrix.jdk_impl }}
        source: ${{ matrix.customized_sdk_url }}
        sourceType: url
        version: ${{ matrix.jdk_version }}
    - continue-on-error: true
      id: get-pr
      uses: actions/github-script@d7906e4ad0b1822421a7e6a35d5ca353c962f410
      with:
        script: "const request = {\n  owner: context.repo.owner,\n  repo: context.repo.repo,\n\
          \  pull_number: context.issue.number\n}\ncore.info(`Getting PR #${request.pull_number}\
          \ from ${request.owner}/${request.repo}`)\ntry {\n  const result = await\
          \ github.pulls.get(request)\n  return result.data\n} catch (err) {\n  core.setFailed(`Request\
          \ failed with error ${err}`)\n}\n"
    - continue-on-error: true
      name: AQA
      uses: adoptium/run-aqa@c6cda6b996deaf508e968d1063efc5e7f34680d8
      with:
        build_list: ${{ matrix.build_list }}
        jdksource: install-jdk
        openj9_repo: ${{ fromJSON(steps.get-pr.outputs.result).head.repo.full_name
          }}:${{ fromJSON(steps.get-pr.outputs.result).head.ref }}
        openjdk_testRepo: ${{ matrix.openjdk_testrepo }}
        target: ${{ matrix.target }}
        tkg_Repo: ${{ matrix.tkg_repo }}
        version: ${{ matrix.jdk_version }}
    - continue-on-error: true
      if: failure()
      uses: actions/upload-artifact@a8a3f3ad30e3422c9c7b888a15615d19a852ae32
      with:
        name: test_output
        path: ./**/output_*/
    strategy:
      fail-fast: false
      matrix: ${{ fromJson(needs.parseComment.outputs.build_parameters) }}
name: PR Comment Build Action for openj9
on:
  repository_dispatch:
    types: trigger-ga___runAqa.yml
